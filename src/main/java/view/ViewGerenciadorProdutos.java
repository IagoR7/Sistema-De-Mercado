/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.CategoriaController;
import controller.ProdutoController;
import dao.CategoriaDao;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Categoria;
import model.Produto;

/**
 *
 * @author Microsoft
 */
public class ViewGerenciadorProdutos extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(ViewGerenciadorProdutos.class.getName());

    /**
     * Creates new form ViewGerenciadorProdutos
     */
    private javax.swing.JComboBox<Categoria> comboCategoria;

    private List<Produto> listaDeProdutos;
    private List<Categoria> listaCategorias;

    
    public ViewGerenciadorProdutos() {
        initComponents();
        carregarCategorias(); // <-- Adicione esta linha
        popularTabela();
    }
    private void limparCampos() {
    txtproduto.setText("");
    txtquantidade.setText("");
    txtpreco.setText("");
    txtcategoria.setSelectedIndex(0);
    jTable1.clearSelection(); // Remove a sele√ß√£o da tabela
    }


    private void carregarCategorias() {
        CategoriaController controller = new CategoriaController();
        this.listaCategorias = controller.buscarCategorias(); // Preenche a lista

        txtcategoria.removeAllItems();
        for (Categoria c : listaCategorias) {
            txtcategoria.addItem(c.getNome()); // Ou adicione o objeto Categoria se o combo for de Categoria
        }
    }
    
    public void popularTabela() {
         ProdutoController controller = new ProdutoController();
    
    // ---- A CORRE√á√ÉO EST√Å AQUI ----
    // Em vez de "List<Produto> listaProdutos =", n√≥s preenchemos a vari√°vel da classe.
    this.listaDeProdutos = controller.listarProdutos();

    // Verifica√ß√£o de seguran√ßa para evitar o erro se o DAO retornar null por algum motivo
    if (this.listaDeProdutos == null) {
        JOptionPane.showMessageDialog(this, "N√£o foi poss√≠vel carregar a lista de produtos.");
        return; // Para a execu√ß√£o para evitar erros
    }

    DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
    tableModel.setRowCount(0);

    SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy HH:mm");

    // Agora o loop usa a lista correta, que est√° salva na classe
    for (Produto produto : this.listaDeProdutos) {
        Object[] rowData = {
            produto.getNome(),
            produto.getCategoria().getNome(),
            produto.getQuantidade(),
            produto.getPreco(),
            formatador.format(produto.getDataCadastro()),
            produto.getUsuario().getLogin()
        };
        tableModel.addRow(rowData);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel5 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtquantidade = new javax.swing.JTextField();
        txtproduto = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        btnbuscar = new javax.swing.JButton();
        btnCadProduto = new javax.swing.JButton();
        txtpreco = new javax.swing.JTextField();
        btnatualizar = new javax.swing.JButton();
        btndeletar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtcategoria = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();

        jToggleButton1.setText("jToggleButton1");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel5.setText("Tela De Cadastro De Produto");

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setText("Produto");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setText("Pre√ßo");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel3.setText("Quantidade");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Produtos", "Caterogia", "Quantidade", "Pre√ßo", "Horario", "Usuario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
        }

        txtquantidade.setText("jTextField1");

        txtproduto.setText("jTextField1");

        jTextField3.setText("Buscar Produto");

        btnbuscar.setText(" Buscar üîç");

        btnCadProduto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCadProduto.setText("Cadastrar Produto");
        btnCadProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadProdutoActionPerformed(evt);
            }
        });

        txtpreco.setText("jTextField1");

        btnatualizar.setText("Atualizar üîÑ");
        btnatualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnatualizarActionPerformed(evt);
            }
        });

        btndeletar.setText("Deletar üóëÔ∏è");
        btndeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeletarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel6.setText("Gerenciamento de Produto");

        txtcategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Eletr√¥nicos", "Material de Escrit√≥rio", "Alimentos" }));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel7.setText("Categoria");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCadProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(104, 104, 104)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtproduto, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtpreco))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtquantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(69, 69, 69)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtcategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel7)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnatualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btndeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtproduto, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtquantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpreco, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnatualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btndeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnbuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCadProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadProdutoActionPerformed
        new view.ViewCadastroProduto().setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_btnCadProdutoActionPerformed

    private void btnatualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnatualizarActionPerformed
        int linhaSelecionada = jTable1.getSelectedRow();

    if (linhaSelecionada == -1) {
        JOptionPane.showMessageDialog(this, "Por favor, selecione um produto para atualizar.");
        return;
    }

    try {
        String nome = txtproduto.getText();
        int quantidade = Integer.parseInt(txtquantidade.getText());
        double preco = Double.parseDouble(txtpreco.getText());
        // Pegue o objeto Categoria selecionada (se seu combo for de Categoria)
        Categoria categoriaSelecionada = null;
        if (txtcategoria.getSelectedItem() instanceof Categoria) {
            categoriaSelecionada = (Categoria) txtcategoria.getSelectedItem();
        } else {
            // Se for String, busque na listaCategorias
            String nomeCategoria = txtcategoria.getSelectedItem().toString();
            for (Categoria c : listaCategorias) {
                if (c.getNome().equals(nomeCategoria)) {
                    categoriaSelecionada = c;
                    break;
                }
            }
        }

        Produto produtoSelecionado = this.listaDeProdutos.get(linhaSelecionada);
        int idParaAtualizar = produtoSelecionado.getId();

        Produto produtoAtualizado = new Produto();
        produtoAtualizado.setId(idParaAtualizar);
        produtoAtualizado.setNome(nome);
        produtoAtualizado.setQuantidade(quantidade);
        produtoAtualizado.setPreco(preco);
        produtoAtualizado.setCategoria(categoriaSelecionada);
        produtoAtualizado.setUsuario(produtoSelecionado.getUsuario()); // mant√©m o usu√°rio original

        ProdutoController controller = new ProdutoController();
        controller.atualizar(produtoAtualizado);

        JOptionPane.showMessageDialog(this, "Produto atualizado com sucesso!");
        popularTabela();
        limparCampos();

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Por favor, insira valores num√©ricos v√°lidos para Quantidade e Pre√ßo.");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Ocorreu um erro ao atualizar: " + e.getMessage());
        System.out.println(this + e.getMessage());
    }
    }//GEN-LAST:event_btnatualizarActionPerformed

    private void btndeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeletarActionPerformed
        // 1. Pega a linha que o usu√°rio selecionou na tabela
    int linhaSelecionada = jTable1.getSelectedRow();

    // 2. Verifica se alguma linha foi realmente selecionada
    if (linhaSelecionada == -1) {
        JOptionPane.showMessageDialog(this, "Por favor, selecione um produto para excluir.");
        return; // Para a execu√ß√£o se nada foi selecionado
    }

    // 3. Pega o ID do produto da primeira coluna (que est√° oculta ou foi removida da exibi√ß√£o)
    // Para isso, precisamos da lista de produtos original.
    Produto produtoSelecionado = this.listaDeProdutos.get(linhaSelecionada);
    int idParaDeletar = produtoSelecionado.getId();
    String nomeProduto = produtoSelecionado.getNome();

    // 4. Pede confirma√ß√£o ao usu√°rio (MUITO IMPORTANTE!)
    int resposta = JOptionPane.showConfirmDialog(this, 
            "Tem certeza que deseja excluir o produto '" + nomeProduto + "'?", 
            "Confirma√ß√£o de Exclus√£o", 
            JOptionPane.YES_NO_OPTION);

    // 5. Se o usu√°rio confirmou, chama o controller
    if (resposta == JOptionPane.YES_OPTION) {
        ProdutoController controller = new ProdutoController();
        controller.deletar(idParaDeletar);
        
        JOptionPane.showMessageDialog(this, "Produto exclu√≠do com sucesso!");

        // 6. ATUALIZA A TABELA para mostrar que o produto sumiu
        popularTabela();
        limparCampos(); // M√©todo para limpar os campos de texto
    }
    }//GEN-LAST:event_btndeletarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
         int linhaSelecionada = jTable1.getSelectedRow();

    // Verifica se uma linha foi realmente selecionada (retorna -1 se n√£o)
    if (linhaSelecionada != -1) {
        // Pega os valores da linha selecionada, usando os √≠ndices corretos das colunas
        String nome = jTable1.getValueAt(linhaSelecionada, 0).toString();       // Coluna 0 = Produto
        String categoria = jTable1.getValueAt(linhaSelecionada, 1).toString();  // Coluna 1 = Categoria
        String quantidade = jTable1.getValueAt(linhaSelecionada, 2).toString(); // Coluna 2 = Quantidade
        String preco = jTable1.getValueAt(linhaSelecionada, 3).toString();      // Coluna 3 = Pre√ßo (R$)

        // Preenche os campos de texto com os valores obtidos
        // IMPORTANTE: Altere os nomes (txtNomeProduto, etc.) para os nomes REAIS dos seus componentes!
        txtproduto.setText(nome);
        txtquantidade.setText(quantidade);
        txtpreco.setText(preco);
        
        // Para o JComboBox de categoria, √© um pouco mais complexo (veja o b√¥nus abaixo)
        // Por enquanto, podemos apenas exibir em um campo de texto se voc√™ tiver um.
        // txtCategoria.setText(categoria); 
    }
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new ViewGerenciadorProdutos().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadProduto;
    private javax.swing.JButton btnatualizar;
    private javax.swing.JButton btnbuscar;
    private javax.swing.JButton btndeletar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JComboBox<String> txtcategoria;
    private javax.swing.JTextField txtpreco;
    private javax.swing.JTextField txtproduto;
    private javax.swing.JTextField txtquantidade;
    // End of variables declaration//GEN-END:variables
}
